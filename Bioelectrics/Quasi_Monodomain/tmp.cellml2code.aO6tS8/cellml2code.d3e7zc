#include <math.h>
#include <stdio.h>
extern double fabs(double x);
extern double acos(double x);
extern double acosh(double x);
extern double atan(double x);
extern double atanh(double x);
extern double asin(double x);
extern double asinh(double x);
extern double acos(double x);
extern double acosh(double x);
extern double asin(double x);
extern double asinh(double x);
extern double atan(double x);
extern double atanh(double x);
extern double ceil(double x);
extern double cos(double x);
extern double cosh(double x);
extern double tan(double x);
extern double tanh(double x);
extern double sin(double x);
extern double sinh(double x);
extern double exp(double x);
extern double floor(double x);
extern double pow(double x, double y);
extern double factorial(double x);
extern double log(double x);
extern double arbitrary_log(double x, double base);
extern double gcd_pair(double a, double b);
extern double lcm_pair(double a, double b);
extern double gcd_multi(unsigned int size, ...);
extern double lcm_multi(unsigned int size, ...);
extern double multi_min(unsigned int size, ...);
extern double multi_max(unsigned int size, ...);
extern void NR_MINIMISE(double(*func)(double VOI, double *C, double *R, double *S, double *A),double VOI, double *C, double *R, double *S, double *A, double *V);


void OC_CellML_RHS_routine(double VOI, double* OC_STATE, double* OC_RATE, double* OC_WANTED, double* OC_KNOWN)
{

double DUMMY_ASSIGNMENT;
double CONSTANTS[8], ALGEBRAIC[11];

DUMMY_ASSIGNMENT /*OC_STATE[0]*/ = -70;
CONSTANTS[0] = -70;
CONSTANTS[1] = 0.01;
DUMMY_ASSIGNMENT /*OC_KNOWN[0]*/ = 3.786;
DUMMY_ASSIGNMENT /*OC_STATE[1]*/ = 0.0195;
DUMMY_ASSIGNMENT /*OC_STATE[2]*/ = 0.9524;
DUMMY_ASSIGNMENT /*OC_KNOWN[2]*/ = 1.346;
DUMMY_ASSIGNMENT /*OC_STATE[3]*/ = 0.0454;
DUMMY_ASSIGNMENT /*OC_KNOWN[3]*/ = 0.36;
DUMMY_ASSIGNMENT /*OC_STATE[4]*/ = 0.0249;
DUMMY_ASSIGNMENT /*OC_STATE[5]*/ = 0.5833;
DUMMY_ASSIGNMENT /*OC_KNOWN[1]*/ = 5e-4;
CONSTANTS[2] = 231e-5;
CONSTANTS[3] = CONSTANTS[0]+130.600;
CONSTANTS[4] = CONSTANTS[0] - 31.3400;
CONSTANTS[5] = CONSTANTS[0] - 31.3400;
CONSTANTS[6] = CONSTANTS[0] - 31.3400;
CONSTANTS[7] = CONSTANTS[0]+5.42000;
ALGEBRAIC[1] = ( - 2.72500*(OC_STATE[0]+35.0000))/(exp(- (OC_STATE[0]+35.0000)/10.0000) - 1.00000);
ALGEBRAIC[6] =  90.8300*exp(- (OC_STATE[0]+60.0000)/20.0000);
OC_RATE[1] =  ALGEBRAIC[1]*(1.00000 - OC_STATE[1]) -  ALGEBRAIC[6]*OC_STATE[1];
ALGEBRAIC[2] =  1.81700*exp(- (OC_STATE[0]+52.0000)/20.0000);
ALGEBRAIC[7] = 27.2500/(exp(- (OC_STATE[0]+22.0000)/10.0000)+1.00000);
OC_RATE[2] =  ALGEBRAIC[2]*(1.00000 - OC_STATE[2]) -  ALGEBRAIC[7]*OC_STATE[2];
ALGEBRAIC[3] = ( - 0.0957500*(OC_STATE[0]+37.0000))/(exp(- (OC_STATE[0]+37.0000)/10.0000) - 1.00000);
ALGEBRAIC[8] =  1.91500*exp(- (OC_STATE[0]+47.0000)/80.0000);
OC_RATE[3] =  ALGEBRAIC[3]*(1.00000 - OC_STATE[3]) -  ALGEBRAIC[8]*OC_STATE[3];
ALGEBRAIC[4] = ( - 0.00600000*(OC_STATE[0]+90.0000))/(exp(- (OC_STATE[0]+90.0000)/10.0000) - 1.00000);
ALGEBRAIC[9] =  0.100000*exp(- (OC_STATE[0]+30.0000)/10.0000);
OC_RATE[4] =  ALGEBRAIC[4]*(1.00000 - OC_STATE[4]) -  ALGEBRAIC[9]*OC_STATE[4];
ALGEBRAIC[5] =  0.0400000*exp(- (OC_STATE[0]+70.0000)/20.0000);
ALGEBRAIC[10] = 0.600000/(exp(- (OC_STATE[0]+40.0000)/10.0000)+1.00000);
OC_RATE[5] =  ALGEBRAIC[5]*(1.00000 - OC_STATE[5]) -  ALGEBRAIC[10]*OC_STATE[5];
OC_WANTED[4] =  OC_KNOWN[0]*pow(OC_STATE[1], 3.00000)*OC_STATE[2]*(OC_STATE[0] - CONSTANTS[3]);
OC_WANTED[0] =  OC_KNOWN[2]*pow(OC_STATE[3], 4.00000)*(OC_STATE[0] - CONSTANTS[4]);
OC_WANTED[3] =  CONSTANTS[2]*(OC_STATE[0] - CONSTANTS[7]);
OC_WANTED[1] =  OC_KNOWN[3]*pow(OC_STATE[4], 3.00000)*OC_STATE[5]*(OC_STATE[0] - CONSTANTS[5]);
OC_WANTED[2] =  OC_KNOWN[1]*(OC_STATE[0] - CONSTANTS[6]);
ALGEBRAIC[0] = (VOI>=100.000&&VOI<=100.500 ? 0.300000 : VOI>=100.500&&VOI<=101.000 ? - 0.300000 : 0.00000);
OC_RATE[0] = - (- ALGEBRAIC[0]+OC_WANTED[4]+OC_WANTED[0]+OC_WANTED[3]+OC_WANTED[1]+OC_WANTED[2])/CONSTANTS[1];


}//OC_CellML_RHS_routine()

;